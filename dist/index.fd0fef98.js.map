{"mappings":"AAAA,IAAI,SAAO,SAAS,gBAAgB,CAAC;AACrC,IAAI,OAAK,SAAS,gBAAgB,CAAC;AACnC,sBAAsB;AAKtB,SAAS,SAAS,KAAK;IACrB,OAAO,aAAa,IAAI,CAAC;AAE3B;AAEA,SAAS,YAAY,OAAO;IAC1B,IAAI,QAAM;IAEV,IAAI,IAAI,IAAE,GAAE,IAAE,GAAE,IAEd,IAAG,QAAQ,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,IAAE,UAC5C,SAAO;IAMX,IAAG,SAAO,GACR,OAAO;SAEP,OAAO;AAIX;AAEA,SAAS,aAAa,IAAI;IACxB,KAAK,OAAO,CAAC,CAAC;QACZ,IAAG,YAAY,UAEd,QAAQ,KAAK,CAAC,eAAe,GAAC;IAKjC;AACF;AAEA,SAAS,aAAa,KAAK;IAEzB,IAAG,MAAM,MAAM,CAAC,IAAI,IAAE,MAAM,GAAG,EAAC;QAC9B,MAAM,MAAM,CAAC,KAAK,CAAC,eAAe,GAAC;QACnC,aAAa;IACf,OAEE,MAAM,MAAM,CAAC,KAAK,CAAC,eAAe,GAAC;AAGvC;AAEA,SAAS,mBAAmB,SAAS;IACnC,UAAU,gBAAgB,CAAC,WAAU,CAAC;QACpC,IAAG,CAAC,SAAS,MAAM,GAAG,GACpB,MAAM,cAAc;aAGpB,aAAa;IAKjB;AAGF;AAEA,OAAO,OAAO,CAAC,CAAC;IAAa,mBAAmB;AAAU","sources":["OneDrive - Cognizant/Desktop/js/wordmasters game/fun2.js"],"sourcesContent":["let inputs=document.querySelectorAll(\"input\");\r\nlet rows=document.querySelectorAll(\".row\")\r\n//console.log(rows[0])\r\n\r\n\r\n\r\n\r\nfunction isLetter(value){\r\n  return /^[a-zA-z]$/.test(value);\r\n\r\n}\r\n\r\nfunction isAllYellow(eachRow){\r\n  let count=0;\r\n\r\n  for(let i=0;i<5;i++){\r\n\r\n    if(eachRow.children[i].style.backgroundColor==\"yellow\"){\r\n      count+=1;\r\n    \r\n      }\r\n\r\n\r\n  }\r\n  if(count==5){\r\n    return true;\r\n  }else{\r\n    return false;\r\n  }\r\n\r\n\r\n}\r\n\r\nfunction makeRowGreen(rows){\r\n  rows.forEach((eachRow)=>{\r\n    if(isAllYellow(eachRow)){\r\n    \r\n     eachRow.style.backgroundColor=\"green\";\r\n    \r\n\r\n    }\r\n    \r\n  })\r\n}\r\n\r\nfunction checkTheWord(event){\r\n\r\n  if(event.target.name==event.key){\r\n    event.target.style.backgroundColor=\"yellow\";\r\n    makeRowGreen(rows);\r\n  }\r\n  else{\r\n    event.target.style.backgroundColor=\"gray\";\r\n  }\r\n\r\n}\r\n\r\nfunction applyFunctionality(eachInput){\r\n  eachInput.addEventListener(\"keydown\",(event)=>{\r\n    if(!isLetter(event.key)){\r\n      event.preventDefault();\r\n      \r\n    }else{\r\n      checkTheWord(event);     \r\n\r\n    }\r\n    \r\n    \r\n  })\r\n\r\n\r\n}\r\n\r\ninputs.forEach((eachInput)=>{applyFunctionality(eachInput)})"],"names":[],"version":3,"file":"index.fd0fef98.js.map","sourceRoot":"/__parcel_source_root/"}